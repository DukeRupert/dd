// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountArtists(ctx context.Context) (int64, error)
	CountLocations(ctx context.Context) (int64, error)
	CountRecords(ctx context.Context) (int64, error)
	CountRecordsByArtist(ctx context.Context, artistID pgtype.Int4) (int64, error)
	CountRecordsByLocation(ctx context.Context, currentLocationID pgtype.Int4) (int64, error)
	CreateArtist(ctx context.Context, name string) (Artist, error)
	CreateLocation(ctx context.Context, arg CreateLocationParams) (Location, error)
	CreateRecord(ctx context.Context, arg CreateRecordParams) (Record, error)
	DeleteArtist(ctx context.Context, id int32) error
	DeleteLocation(ctx context.Context, id int32) error
	DeleteRecord(ctx context.Context, id int32) error
	GetArtist(ctx context.Context, id int32) (Artist, error)
	GetArtistByName(ctx context.Context, name string) (Artist, error)
	GetDefaultLocation(ctx context.Context) (Location, error)
	GetLocation(ctx context.Context, id int32) (Location, error)
	GetLocationByName(ctx context.Context, name string) (Location, error)
	GetMostPlayedRecords(ctx context.Context, limit int32) ([]Record, error)
	GetRecentlyPlayedRecords(ctx context.Context, limit int32) ([]Record, error)
	GetRecord(ctx context.Context, id int32) (Record, error)
	GetRecordWithDetails(ctx context.Context, id int32) (GetRecordWithDetailsRow, error)
	GetRecordsByArtist(ctx context.Context, artistID pgtype.Int4) ([]Record, error)
	GetRecordsByCondition(ctx context.Context, condition pgtype.Text) ([]Record, error)
	GetRecordsByLocation(ctx context.Context, currentLocationID pgtype.Int4) ([]Record, error)
	GetRecordsByReleaseYear(ctx context.Context, releaseYear pgtype.Int4) ([]Record, error)
	ListArtists(ctx context.Context) ([]Artist, error)
	ListArtistsWithPagination(ctx context.Context, arg ListArtistsWithPaginationParams) ([]Artist, error)
	ListLocations(ctx context.Context) ([]Location, error)
	ListLocationsWithPagination(ctx context.Context, arg ListLocationsWithPaginationParams) ([]Location, error)
	ListRecords(ctx context.Context) ([]Record, error)
	ListRecordsWithDetails(ctx context.Context) ([]ListRecordsWithDetailsRow, error)
	ListRecordsWithPagination(ctx context.Context, arg ListRecordsWithPaginationParams) ([]Record, error)
	RecordPlayback(ctx context.Context, id int32) (Record, error)
	SearchArtistsByName(ctx context.Context, dollar_1 pgtype.Text) ([]Artist, error)
	SearchLocationsByName(ctx context.Context, dollar_1 pgtype.Text) ([]Location, error)
	SearchRecordsByAlbum(ctx context.Context, dollar_1 pgtype.Text) ([]Record, error)
	SearchRecordsByTitle(ctx context.Context, dollar_1 pgtype.Text) ([]Record, error)
	SetDefaultLocation(ctx context.Context, id int32) error
	UpdateArtist(ctx context.Context, arg UpdateArtistParams) (Artist, error)
	UpdateLocation(ctx context.Context, arg UpdateLocationParams) (Location, error)
	UpdateLocationName(ctx context.Context, arg UpdateLocationNameParams) (Location, error)
	UpdateRecord(ctx context.Context, arg UpdateRecordParams) (Record, error)
	UpdateRecordCondition(ctx context.Context, arg UpdateRecordConditionParams) (Record, error)
	UpdateRecordLocation(ctx context.Context, arg UpdateRecordLocationParams) (Record, error)
}

var _ Querier = (*Queries)(nil)
